{"version":3,"sources":["../index.js"],"names":["config","require","mongoose","helmet","morgan","express","app","courses","users","home","use","json","urlencoded","extended","has","console","log","process","exit","connect","then","error","port","env","PORT","listen"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMK,GAAG,GAAGD,OAAO,EAAnB;;AAEA,IAAME,OAAO,GAAGN,OAAO,CAAC,kBAAD,CAAvB;;AACA,IAAMO,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAMQ,IAAI,GAAGR,OAAO,CAAC,eAAD,CAApB;;AAEAK,GAAG,CAACI,GAAJ,CAAQL,OAAO,CAACM,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQL,OAAO,CAACO,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQP,MAAM,EAAd;AAEAG,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBH,OAAxB;AACAD,GAAG,CAACI,GAAJ,CAAQ,YAAR,EAAsBF,KAAtB;AACAF,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaD,IAAb;;AAEA,IAAI,CAACT,MAAM,CAACc,GAAP,CAAW,eAAX,CAAL,EAAkC;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD,C,CAED;;;AAEAhB,QAAQ,CACLiB,OADH,CACW,2BADX,EAEGC,IAFH,CAEQ,YAAM;AACVL,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,CAJH,WAMS,UAACK,KAAD,EAAW;AAChBN,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDK,KAAjD;AACD,CARH,E,CAUA;;AAEA,IAAMC,IAAI,GAAGL,OAAO,CAACM,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAlB,GAAG,CAACmB,MAAJ,CAAWH,IAAX,EAAiB;AAAA,SAAMP,OAAO,CAACC,GAAR,6BAAiCM,IAAjC,WAAN;AAAA,CAAjB","sourcesContent":["const config = require(\"config\");\r\nconst mongoose = require(\"mongoose\");\r\n\r\nconst helmet = require(\"helmet\");\r\n\r\nconst morgan = require(\"morgan\");\r\n\r\nconst express = require(\"express\");\r\n\r\nconst app = express();\r\n\r\nconst courses = require(\"./routes/courses\");\r\nconst users = require(\"./routes/users\");\r\nconst home = require(\"./routes/home\");\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(helmet());\r\n\r\napp.use(\"/api/courses\", courses);\r\napp.use(\"/api/users\", users);\r\napp.use(\"/\", home);\r\n\r\nif (!config.has(\"jwtPrivateKey\")) {\r\n  console.log(\"fATAL ERROR:  jwtPrivateKey is not defined\");\r\n  process.exit(1);\r\n}\r\n\r\n/// connection with data base\r\n\r\nmongoose\r\n  .connect(\"mongodb://localhost/posts\")\r\n  .then(() => {\r\n    console.log(\"connected to mangodb\");\r\n  })\r\n\r\n  .catch((error) => {\r\n    console.log(\"could not be connected to mongodb\", error);\r\n  });\r\n\r\n// end here\r\n\r\nconst port = process.env.PORT || 5000;\r\n\r\napp.listen(port, () => console.log(`listening on port ${port} ....`));\r\n"],"file":"index.js"}